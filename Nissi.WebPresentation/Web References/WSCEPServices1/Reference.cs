//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Nissi.WebPresentation.WSCEPServices1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://diastek.com/ws")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getLogradouroOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Nissi.WebPresentation.Properties.Settings.Default.Nissi_WebPresentation_WSCEPServices1_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getLogradouroCompletedEventHandler getLogradouroCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://diastek.com/ws/getLogradouro", RequestNamespace="http://diastek.com/ws", ResponseNamespace="http://diastek.com/ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Logradouro[] getLogradouro(string cep) {
            object[] results = this.Invoke("getLogradouro", new object[] {
                        cep});
            return ((Logradouro[])(results[0]));
        }
        
        /// <remarks/>
        public void getLogradouroAsync(string cep) {
            this.getLogradouroAsync(cep, null);
        }
        
        /// <remarks/>
        public void getLogradouroAsync(string cep, object userState) {
            if ((this.getLogradouroOperationCompleted == null)) {
                this.getLogradouroOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLogradouroOperationCompleted);
            }
            this.InvokeAsync("getLogradouro", new object[] {
                        cep}, this.getLogradouroOperationCompleted, userState);
        }
        
        private void OngetLogradouroOperationCompleted(object arg) {
            if ((this.getLogradouroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLogradouroCompleted(this, new getLogradouroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://diastek.com/ws")]
    public partial class Logradouro {
        
        private string ufField;
        
        private string cidadeField;
        
        private string enderecoField;
        
        private string enderecoAbreviadoField;
        
        private string bairroField;
        
        private string cEPField;
        
        private string complementoField;
        
        private string tipoLogradouroField;
        
        private string enderecoSemAcentoField;
        
        /// <remarks/>
        public string UF {
            get {
                return this.ufField;
            }
            set {
                this.ufField = value;
            }
        }
        
        /// <remarks/>
        public string Cidade {
            get {
                return this.cidadeField;
            }
            set {
                this.cidadeField = value;
            }
        }
        
        /// <remarks/>
        public string Endereco {
            get {
                return this.enderecoField;
            }
            set {
                this.enderecoField = value;
            }
        }
        
        /// <remarks/>
        public string EnderecoAbreviado {
            get {
                return this.enderecoAbreviadoField;
            }
            set {
                this.enderecoAbreviadoField = value;
            }
        }
        
        /// <remarks/>
        public string Bairro {
            get {
                return this.bairroField;
            }
            set {
                this.bairroField = value;
            }
        }
        
        /// <remarks/>
        public string CEP {
            get {
                return this.cEPField;
            }
            set {
                this.cEPField = value;
            }
        }
        
        /// <remarks/>
        public string Complemento {
            get {
                return this.complementoField;
            }
            set {
                this.complementoField = value;
            }
        }
        
        /// <remarks/>
        public string TipoLogradouro {
            get {
                return this.tipoLogradouroField;
            }
            set {
                this.tipoLogradouroField = value;
            }
        }
        
        /// <remarks/>
        public string EnderecoSemAcento {
            get {
                return this.enderecoSemAcentoField;
            }
            set {
                this.enderecoSemAcentoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getLogradouroCompletedEventHandler(object sender, getLogradouroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLogradouroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLogradouroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Logradouro[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Logradouro[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591